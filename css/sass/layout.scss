// Flexible grid
@function flex-grid($columns, $container-columns: $fg-max-columns) {
  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;
  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
  @return percentage($width / $container-width);
}

// The $fg-column, $fg-gutter and $fg-max-columns variables must be defined in your base stylesheet to properly use the flex-grid function.
// This function takes the fluid grid equation (target / context = result) and uses columns to help define each.
//
//  $fg-column: 115px;             // Column Width
//  $fg-gutter: 20px;             // Gutter Width
//  $fg-max-columns: 12;          // Total Columns For Main Container
//
//  div {
//    width: flex-grid(4);        // returns (540px / 1600px) = 33.75%;

.grid-2 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(2);
}

.grid-3 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(3);
}

.grid-4 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(4);
}

.grid-5 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(5);
}

.grid-6 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(6);
}

.grid-8 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(8);
}

.grid-10 {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(10);
}

.wrapper {
  clear: both;
  margin: 0 auto 20px;
  width: flex-grid(12);
  border: 1px dashed #fa8072;
}

.sitename {
  position: relative;
  top: 14px;
  vertical-align: top;
  width: 100%;
  margin: 0;
}

.inline {
  display: inline;
}
